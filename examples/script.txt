def InnerInstrument:
    sample_rate: constant,
    freq: cob,
    color: constant,
    note_on: boolean,
begin
    let freq = freq * (1 + 0.02 * SineOsc(sample_rate, freq=4, phase=0))

    //out Filter(input=PulseOsc(color, sample_rate, freq), type='low_pass', cutoff=0.3, res=0) * Gate(note_on)

    let f = Envelope(
        sample_rate,
        attack='cubed'(0.025),
        decay='cubed'(0.1),
        release='cubed'(1.0),
        sustain_volume=0.5,
        note_on
    )
    out f * Filter(input=PulseOsc(color, sample_rate, freq), type='low_pass', cutoff=0.3, res=0)

    //out FilteredSawtoothInstrument(sample_rate, freq, note_on)
end

def Echoes:
    input: waveform,
    echo_volume: constant,
    filter_type: FilterType,
begin
    out delay 11025 begin
        let result = input + feedback * echo_volume

        out result
        feedback Filter(input=result, type=filter_type, cutoff=0.8, res=0)
    end
end

def Instrument:
    sample_rate: constant,
    freq: cob,
    note_on: boolean,
begin
    let input = InnerInstrument(sample_rate, freq=freq*0.5, color=0.7, note_on)

    out Echoes(input, echo_volume=0.5, filter_type='low_pass')
end
