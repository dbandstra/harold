// TODO: sample_rate should be handled specially:
// passed implicitly to child modules.
// it could even be hardcoded so you don't have to set it as a param at all

def Instrument:
    param sample_rate constant;
    param freq waveform;
    param color constant;
    param note_on boolean;

    osc PulseOsc;
    mod SineOsc;
    dist Distortion;
begin
    let freq =
        * $freq
            + 1
                * 0.02 @mod(sample_rate: $sample_rate, freq: 4, phase: 0)

    let input =
        * 0.7 @osc(color: $color, sample_rate: $sample_rate, freq: freq)

    out @dist(ingain: 0.25, outgain: 0.5, offset: 0, distortion_type: 'overdrive', input: input)
end

def OuterInstrument:
    param sample_rate constant;

    noise Noise;
    instr Instrument;
begin
    out delay 1000 begin
        let damn = @noise()

        out + feedback @instr(sample_rate: $sample_rate, freq: + 220 220, color: 0.7, note_on: true)
    end
end
