// TODO: sample_rate should be handled specially:
// passed implicitly to child modules.
// it could even be hardcoded so you don't have to set it as a param at all

def Instrument:
    sample_rate constant;
    freq waveform;
    color constant;
    note_on boolean;
begin
    let freq =
        * $freq
            + 1
                * 0.02 @SineOsc(sample_rate: $sample_rate, freq: 4, phase: 0)

    let input =
        * 0.7 @PulseOsc(color: $color, sample_rate: $sample_rate, freq: freq)

    out @Distortion(ingain: 0.25, outgain: 0.5, offset: 0, distortion_type: 'overdrive', input: input)
end

def Echoes:
    input waveform;
    echo_volume constant;
begin
    out delay 1000 begin
        let x = + $input * $echo_volume feedback
        out x
        feedback x
    end
end

def OuterInstrument:
    sample_rate constant;
begin
    let input = @Instrument(sample_rate: $sample_rate, freq: + 220 220, color: 0.7, note_on: true)

    out @Echoes(input: input, echo_volume: 0.5)
end
